name: Build and Package SpeedyNote

on:
  push:
    tags:
      - 'v*'

jobs:
  build-debian:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64, armhf]
    container: debian:bookworm
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y cmake make pkg-config git sudo devscripts \
          qt6-base-dev qt6-tools-dev libpoppler-qt6-dev \
          libsdl2-dev libasound2-dev

    - name: Setup cross-compilation environment for ${{ matrix.arch }}
      run: |
        # Install cross-compilation tools
        apt-get install -y crossbuild-essential-${{ matrix.arch }} \
          libqt6core6:${{ matrix.arch }} libqt6gui6:${{ matrix.arch }} \
          libqt6widgets6:${{ matrix.arch }} libpoppler-qt6-3:${{ matrix.arch }} \
          libsdl2-2.0-0:${{ matrix.arch }} libasound2:${{ matrix.arch }}
        
        # Set architecture-specific environment
        export DEB_BUILD_ARCH=${{ matrix.arch }}
        export DEB_HOST_ARCH=${{ matrix.arch }}

    - name: Build Debian package for ${{ matrix.arch }}
      run: |
        pwd
        ls -la
        chmod +x build-package.sh
        # Set architecture for the build script
        export PKGARCH=${{ matrix.arch }}
        ./build-package.sh --deb

    - name: Upload Debian package for ${{ matrix.arch }}
      uses: actions/upload-artifact@v4
      with:
        name: debian-package-${{ matrix.arch }}
        path: "*.deb"
        retention-days: 30

  build-fedora:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64, armv7hl]
    container: fedora:latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        dnf install -y cmake make pkg-config git sudo rpm-build rpm-devel \
          qt6-qtbase-devel qt6-qttools-devel poppler-qt6-devel \
          SDL2-devel alsa-lib-devel

    - name: Setup cross-compilation environment for ${{ matrix.arch }}
      run: |
        # Install cross-compilation tools
        dnf install -y gcc-${{ matrix.arch }}-linux-gnu glibc-devel.${{ matrix.arch }} \
          qt6-qtbase-devel.${{ matrix.arch }} qt6-qttools-devel.${{ matrix.arch }} \
          poppler-qt6-devel.${{ matrix.arch }} SDL2-devel.${{ matrix.arch }} \
          alsa-lib-devel.${{ matrix.arch }}
        
        # Set architecture-specific environment
        export RPM_BUILD_ARCH=${{ matrix.arch }}

    - name: Build Fedora package for ${{ matrix.arch }}
      run: |
        pwd
        ls -la
        chmod +x build-package.sh
        # Set architecture for the build script
        export PKGARCH=${{ matrix.arch }}
        ./build-package.sh --rpm

    - name: Upload Fedora package for ${{ matrix.arch }}
      uses: actions/upload-artifact@v4
      with:
        name: fedora-package-${{ matrix.arch }}
        path: "*.rpm"
        retention-days: 30

  build-archlinux:
    runs-on: ubuntu-latest
    container: archlinux:latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        pacman -Sy --noconfirm cmake make pkgconf git sudo base-devel \
          qt6-base qt6-tools poppler-qt6 sdl2-compat alsa-lib

    - name: Setup non-root user
      run: |
        useradd -m builder
        chown -R builder:builder $GITHUB_WORKSPACE
        echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

    - name: Build ArchLinux package
      run: |
        sudo -u builder bash -c "
          cd $GITHUB_WORKSPACE
          chmod +x build-package.sh
          ./build-package.sh --arch
        "

    - name: Upload ArchLinux package
      uses: actions/upload-artifact@v4
      with:
        name: archlinux-package
        path: "*.pkg.tar.zst"
        retention-days: 30

  create-release:
    needs: [build-debian, build-fedora, build-archlinux]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: List downloaded artifacts
      run: find artifacts -type f -name "*" | sort

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/**/*.deb
          artifacts/**/*.rpm
          artifacts/**/*.pkg.tar.zst
          artifacts/**/*.apk
        draft: false
        prerelease: false
