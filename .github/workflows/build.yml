name: Build and Package SpeedyNote

on:
  push:
    tags:
      - 'v*'

jobs:
  build-debian:
    runs-on: ubuntu-latest
    container: debian:bookworm
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y cmake make pkg-config git sudo devscripts \
          qt6-base-dev qt6-tools-dev libpoppler-qt6-dev \
          libsdl2-dev libasound2-dev

    - name: Build Debian package
      run: |
        pwd
        ls -la
        chmod +x build-package.sh
        ./build-package.sh --deb

    - name: Upload Debian package
      uses: actions/upload-artifact@v4
      with:
        name: debian-package
        path: "*.deb"
        retention-days: 30

  build-fedora:
    runs-on: ubuntu-latest
    container: fedora:latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        dnf install -y cmake make pkg-config git sudo rpm-build rpm-devel \
          qt6-qtbase-devel qt6-qttools-devel poppler-qt6-devel \
          SDL2-devel alsa-lib-devel

    - name: Build Fedora package
      run: |
        pwd
        ls -la
        chmod +x build-package.sh
        ./build-package.sh --rpm

    - name: Upload Fedora package
      uses: actions/upload-artifact@v4
      with:
        name: fedora-package
        path: "*.rpm"
        retention-days: 30

  build-archlinux:
    runs-on: ubuntu-latest
    container: archlinux:latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        pacman -Sy --noconfirm cmake make pkgconf git sudo base-devel \
          qt6-base qt6-tools poppler-qt6 sdl2-compat alsa-lib

    - name: Setup non-root user
      run: |
        useradd -m builder
        chown -R builder:builder $GITHUB_WORKSPACE
        echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

    - name: Build ArchLinux package
      run: |
        sudo -u builder bash -c "
          cd $GITHUB_WORKSPACE
          chmod +x build-package.sh
          ./build-package.sh --arch
        "

    - name: Upload ArchLinux package
      uses: actions/upload-artifact@v4
      with:
        name: archlinux-package
        path: "*.pkg.tar.zst"
        retention-days: 30

  build-alpine:
    runs-on: ubuntu-latest
    container: alpine:latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        apk update
        apk add bash cmake make pkgconf git sudo alpine-sdk abuild \
          qt6-qtbase-dev qt6-qttools-dev poppler-qt5-dev \
          poppler-qt6 sdl2-dev alsa-lib-dev

    - name: Setup non-root user for Alpine
      run: |
        adduser -D builder
        chown -R builder:builder $GITHUB_WORKSPACE
        echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

    - name: Generate Alpine signing key
      run: |
        # Switch to builder user and generate keys
        sudo -u builder bash -c "
          cd /home/builder
          mkdir -p .abuild
          # Generate RSA key pair for package signing
          openssl genrsa -out .abuild/speedynote-ci.rsa 2048
          openssl rsa -in .abuild/speedynote-ci.rsa -pubout -out .abuild/speedynote-ci.rsa.pub
          # Create abuild.conf with key path
          echo 'PACKAGER_PRIVKEY=\"/home/builder/.abuild/speedynote-ci.rsa\"' > .abuild/abuild.conf
          chmod 600 .abuild/speedynote-ci.rsa
          chmod 644 .abuild/speedynote-ci.rsa.pub
          chmod 644 .abuild/abuild.conf
        "

    - name: Debug workspace
      run: |
        echo "Current directory: $(pwd)"
        echo "Files in workspace:"
        ls -la
        echo "Checking build-package.sh:"
        ls -la build-package.sh || echo "build-package.sh not found"

    - name: Build Alpine package
      run: |
        sudo -u builder bash -c "
          cd $GITHUB_WORKSPACE
          chmod +x build-package.sh
          ./build-package.sh --apk
        "

    - name: Upload Alpine package
      uses: actions/upload-artifact@v4
      with:
        name: alpine-package
        path: "*.apk"
        retention-days: 30

  create-release:
    needs: [build-debian, build-fedora, build-archlinux, build-alpine]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: List downloaded artifacts
      run: find artifacts -type f -name "*" | sort

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/**/*.deb
          artifacts/**/*.rpm
          artifacts/**/*.pkg.tar.zst
          artifacts/**/*.apk
        draft: false
        prerelease: false
