name: Build and Package SpeedyNote

on:
  push:
    tags:
      - 'v*'

jobs:
  build-debian:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64, armhf]
    container: debian:bookworm
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        apt-get update
        apt-get install -y cmake make pkg-config git sudo devscripts \
          qt6-base-dev qt6-tools-dev libpoppler-qt6-dev \
          libsdl2-dev libasound2-dev crossbuild-essential-${{ matrix.arch }}

    - name: Build Debian package
      run: |
        pwd
        ls -la
        chmod +x build-package.sh
        ./build-package.sh --deb

    - name: Upload Debian package
      uses: actions/upload-artifact@v4
      with:
        name: debian-package-${{ matrix.arch }}
        path: "*.deb"
        retention-days: 30

  build-fedora:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    container: fedora:latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        dnf install -y cmake make pkg-config git sudo rpm-build rpm-devel \
          qt6-qtbase-devel qt6-qttools-devel poppler-qt6-devel \
          SDL2-devel alsa-lib-devel

    - name: Build Fedora package
      run: |
        pwd
        ls -la
        chmod +x build-package.sh
        ./build-package.sh --rpm

    - name: Upload Fedora package
      uses: actions/upload-artifact@v4
      with:
        name: fedora-package-${{ matrix.arch }}
        path: "*.rpm"
        retention-days: 30

  build-archlinux:
    runs-on: ubuntu-latest
    container: archlinux:latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        pacman -Sy --noconfirm cmake make pkgconf git sudo base-devel \
          qt6-base qt6-tools poppler-qt6 sdl2-compat alsa-lib

    - name: Setup non-root user
      run: |
        useradd -m builder
        chown -R builder:builder $GITHUB_WORKSPACE
        echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

    - name: Build ArchLinux package
      run: |
        sudo -u builder bash -c "
          cd $GITHUB_WORKSPACE
          chmod +x build-package.sh
          ./build-package.sh --arch
        "

    - name: Upload ArchLinux package
      uses: actions/upload-artifact@v4
      with:
        name: archlinux-package
        path: "*.pkg.tar.zst"
        retention-days: 30

  build-flatpak:
    runs-on: ubuntu-latest
    container: fedora:latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # 获取完整历史记录，便于版本检测

    - name: Install Flatpak and dependencies
      run: |
        dnf install -y flatpak flatpak-builder git sudo wget ninja-build
        flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

    - name: Install required runtimes
      run: |
        flatpak install -y flathub org.freedesktop.Sdk//23.08
        flatpak install -y flathub org.freedesktop.Platform//23.08

    - name: Create Flatpak manifest
      run: |
        # 从标签中提取版本号
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "Building version: $VERSION"
        
        cat > io.github.speedynote.SpeedyNote.json << EOF
{
  "app-id": "io.github.speedynote.SpeedyNote",
  "runtime": "org.freedesktop.Platform",
  "runtime-version": "23.08",
  "sdk": "org.freedesktop.Sdk",
  "sdk-extensions": ["org.freedesktop.Sdk.Extension.qt6"],
  "command": "speedynote",
  "finish-args": [
    "--share=ipc",
    "--socket=wayland",
    "--socket=x11",
    "--device=all",
    "--filesystem=home",
    "--filesystem=xdg-documents",
    "--talk-name=org.freedesktop.Notifications"
  ],
  "build-options": {
    "cflags": "-O2 -g",
    "cxxflags": "-O2 -g",
    "env": {
      "QT_QPA_PLATFORM": "xcb"
    }
  },
  "modules": [
    {
      "name": "SpeedyNote",
      "buildsystem": "cmake-ninja",
      "config-opts": [
        "-DCMAKE_BUILD_TYPE=Release",
        "-DCMAKE_INSTALL_PREFIX=/app"
      ],
      "sources": [
        {
          "type": "dir",
          "path": "."
        }
      ],
      "post-install": [
        "install -Dm644 resources/icons/mainicon.png /app/share/icons/hicolor/512x512/apps/io.github.speedynote.SpeedyNote.png",
        "install -Dm644 /dev/stdin /app/share/applications/io.github.speedynote.SpeedyNote.desktop << DESKTOP\n[Desktop Entry]\nVersion=1.0\nType=Application\nName=SpeedyNote\nComment=A fast note-taking application with PDF annotation support\nExec=speedynote %F\nIcon=io.github.speedynote.SpeedyNote\nTerminal=false\nStartupNotify=true\nCategories=Office;Education;\nKeywords=notes;pdf;annotation;writing;package;\nMimeType=application/pdf;application/x-speedynote-package;\nDESKTOP",
        "install -Dm644 /dev/stdin /app/share/mime/packages/io.github.speedynote.SpeedyNote.xml << MIME\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<mime-info xmlns=\"http://www.freedesktop.org/standards/shared-mime-info\">\n    <mime-type type=\"application/x-speedynote-package\">\n        <comment>SpeedyNote Package</comment>\n        <icon name=\"io.github.speedynote.SpeedyNote\"/>\n        <glob pattern=\"*.spn\"/>\n    </mime-type>\n</mime-info>\nMIME"
      ]
    }
  ]
}
EOF

    - name: Build Flatpak bundle
      run: |
        # 从标签中提取版本号
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "Building Flatpak bundle for version: $VERSION"
        
        # 构建应用到仓库
        flatpak-builder --repo=repo --force-clean build-dir io.github.speedynote.SpeedyNote.json
        
        # 创建可安装的捆绑包
        flatpak build-bundle repo speedynote-${VERSION}.flatpak io.github.speedynote.SpeedyNote
        
        # 验证捆绑包
        flatpak info --show-metadata speedynote-${VERSION}.flatpak

    - name: Upload Flatpak bundle
      uses: actions/upload-artifact@v4
      with:
        name: flatpak-bundle
        path: "*.flatpak"
        retention-days: 30

  create-release:
    needs: [build-debian, build-fedora, build-archlinux, build-flatpak]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: List downloaded artifacts
      run: find artifacts -type f -name "*" | sort

    - name: Rename architecture-specific packages
      run: |
        # Rename Debian packages
        for deb_file in artifacts/debian-package-*/*.deb; do
          if [ -f "$deb_file" ]; then
            arch=$(echo "$deb_file" | grep -oE 'debian-package-[^/]*' | sed 's/debian-package-//')
            filename=$(basename "$deb_file")
            name=$(echo "$filename" | sed 's/_[^_]*\.deb$//')
            version=$(echo "$filename" | grep -oE '[0-9]+\.[0-9]+\.[0-9]+-[0-9]+')
            new_name="${name}_${version}_${arch}.deb"
            cp "$deb_file" "artifacts/$new_name"
          fi
        done
        
        # Rename Fedora packages
        for rpm_file in artifacts/fedora-package-*/*.rpm; do
          if [ -f "$rpm_file" ]; then
            arch=$(echo "$rpm_file" | grep -oE 'fedora-package-[^/]*' | sed 's/fedora-package-//')
            filename=$(basename "$rpm_file")
            name_version=$(echo "$filename" | sed 's/\.rpm$//')
            new_name="${name_version}.${arch}.rpm"
            cp "$rpm_file" "artifacts/$new_name"
          fi
        done
        
        # Copy Arch packages (no need to rename as they're already architecture-specific)
        for arch_file in artifacts/archlinux-package/*.pkg.tar.zst; do
          if [ -f "$arch_file" ]; then
            filename=$(basename "$arch_file")
            cp "$arch_file" "artifacts/$filename"
          fi
        done
        
        # Copy Flatpak bundle
        for flatpak_file in artifacts/flatpak-bundle/*.flatpak; do
          if [ -f "$flatpak_file" ]; then
            filename=$(basename "$flatpak_file")
            cp "$flatpak_file" "artifacts/$filename"
          fi
        done

    - name: List final artifacts
      run: find artifacts -maxdepth 1 -type f -name "*" | sort

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/*.deb
          artifacts/*.rpm
          artifacts/*.pkg.tar.zst
          artifacts/*.flatpak
        draft: false
        prerelease: false
